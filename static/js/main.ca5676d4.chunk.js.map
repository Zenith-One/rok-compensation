{"version":3,"sources":["Model/TroopTier.model.ts","Component/TroopEntryRow.tsx","Component/TroopEntryList.tsx","App.tsx","reportWebVitals.js","index.js"],"names":["TroopType","TroopTier","data","arr","name","cost","heal","minutes","food","wood","stone","gold","timeFood","timeWood","timeStone","timeGold","fresh","addItem","uType","tier","healFood","healWood","healStone","healGold","freshMinutes","freshFood","freshWood","freshStone","freshGold","newEntry","push","theData","map","item","i","label","value","options","getNewEntryRowState","index","unitData","unitCount","isDead","time","selectOptions","MenuItem","TroopEntryRow","state","props","handleUnitTypeChange","event","newData","Number","target","setState","handleUnitCountChange","newCount","handleUnitIsDead","newIsDead","checked","handleDelete","prevProps","baseValues","this","console","log","totalFood","compensateTime","totalWood","totalStone","totalGold","newCost","handleUpdate","showDelete","Button","color","size","onClick","variant","noValidate","autoComplete","className","id","FormGroup","row","FormControl","InputLabel","Select","labelId","onChange","TextField","FormControlLabel","control","Switch","React","Component","dataDidChange","oldEntries","oldEntry","filter","TroopEntryList","entries","isEditing","updateParent","newEntries","handleDataUpdate","handleRowUpdate","getPosition","Object","assign","handleEditingToggle","handleAddClick","lastIndex","length","handleRowDelete","bind","getRows","getEditButton","formatTime","n","d","days","Math","floor","hours","formatNumber","B","M","base","baseName","truncated","ceil","App","useState","compTime","updateCompTime","totalCost","updateTotalCost","Container","maxWidth","labelPlacement","Box","tc","reduce","a","b","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ca5676d4.chunk.js","sourcesContent":["export enum TroopType {\r\n  SIEGE = 'Siege',\r\n  ARCHER = 'Archer',\r\n  CAVALRY = 'Cavalry',\r\n  INFANTRY = 'Infantry'\r\n};\r\n\r\nexport enum TroopTier { T1 = 1, T2 = 2, T3 = 3, T4 = 4, T5 = 5 };\r\n\r\nexport interface TroopCost {\r\n  minutes: number,\r\n  food: number,\r\n  wood: number,\r\n  stone: number,\r\n  gold: number,\r\n  timeFood: number,\r\n  timeWood: number,\r\n  timeStone: number,\r\n  timeGold: number\r\n}\r\n\r\nexport interface TroopTierData {\r\n  name: string;\r\n  cost: {\r\n    heal: TroopCost,\r\n    fresh: TroopCost\r\n  }\r\n}\r\n\r\ninterface TroopTypeEntry {\r\n    [key: number] : TroopTierData //TroopTier\r\n}\r\n\r\ninterface TroopTypeDictionary {\r\n    [key: string]: TroopTypeEntry, //TroopType\r\n    arr: TroopTierData[]\r\n}\r\n\r\nlet data: TroopTypeDictionary = { arr: [\r\n\r\n    {\r\n        name: `Select Type...`,\r\n        cost: {\r\n            heal: {\r\n                minutes: 0, food: 0, wood: 0, stone: 0, gold: 0,\r\n                timeFood: 0, timeWood: 0, timeStone: 0, timeGold: 0\r\n            },\r\n            fresh: {\r\n                minutes: 0, food: 0, wood: 0, stone: 0, gold: 0,\r\n                timeFood: 0, timeWood: 0, timeStone: 0, timeGold: 0\r\n            }\r\n        }\r\n    }\r\n]};\r\n\r\nfunction addItem (\r\n        uType:string,\r\n        tier:number,\r\n        healFood:number,\r\n        healWood:number,\r\n        healStone:number,\r\n        healGold:number,\r\n        minutes:number,\r\n        timeFood:number,\r\n        timeWood:number,\r\n        timeStone:number,\r\n        timeGold:number,\r\n        freshMinutes:number,\r\n        freshFood:number,\r\n        freshWood:number,\r\n        freshStone:number,\r\n        freshGold:number\r\n    ): void{\r\n    let newEntry: TroopTierData = {\r\n        name: `${uType} T${tier}`,\r\n        cost: {\r\n            heal: {\r\n                minutes: minutes,\r\n                food: healFood,\r\n                wood: healWood,\r\n                stone: healStone,\r\n                gold: healGold,\r\n                timeFood: timeFood,\r\n                timeWood: timeWood,\r\n                timeStone: timeStone,\r\n                timeGold: timeGold\r\n            },\r\n            fresh: {\r\n                minutes: freshMinutes,\r\n                food: healFood / 0.4,\r\n                wood: healWood / 0.4,\r\n                stone: healStone / 0.4,\r\n                gold: healGold / 0.4,\r\n                timeFood: freshFood,\r\n                timeWood: freshWood,\r\n                timeStone: freshStone,\r\n                timeGold: freshGold\r\n            }\r\n        }\r\n    }\r\n\r\n    data[uType] = data[uType] || {};\r\n    data[uType][tier] = newEntry;\r\n    data.arr.push(newEntry);\r\n}\r\n\r\naddItem('Siege', 1,24,24,0,0,0,0,0,0,0,0.25,150,150,0,0);\r\naddItem('Siege', 2,26,26,20,0,0.01666666667,6.666666667,6.666666667,5,0,0.5,300,300,225,0);\r\naddItem('Siege', 3,40,40,30,4,0.03333333333,10,10,7.5,3.333333333,1,600,600,450,200);\r\naddItem('Siege', 4,80,80,60,8,0.05,15,15,11.25,5,1.333333333,800,800,600,266.6666667);\r\naddItem('Siege', 5,200,200,160,160,0.06666666667,20,20,15,6.666666667,2,1200,1200,900,400);\r\naddItem('Archer', 1,16,24,0,0,0,0,0,0,0,0.25,150,150,0,0);\r\naddItem('Archer', 2,0,40,30,0,0.01666666667,0,10,7.5,0,0.5,0,300,225,0);\r\naddItem('Archer', 3,0,60,44,4,0.03333333333,0,13.33333333,10,4.444444444,1,0,600,450,200);\r\naddItem('Archer', 4,0,120,90,8,0.05,0,20,15,6.666666667,1.333333333,0,800,600,266.6666667);\r\naddItem('Archer', 5,0,320,240,160,0.06666666667,0,26.66666667,20,8.888888889,2,0,1200,900,400);\r\naddItem('Cavalry', 1,24,16,0,0,0,0,0,0,0,0.25,150,150,0,0);\r\naddItem('Cavalry', 2,40,0,30,0,0.01666666667,10,0,7.5,0,0.5,300,0,225,0);\r\naddItem('Cavalry',3,60,0,40,4,0.03333333333,13.33333333,0,10,4.444444444,1,600,0,450,200);\r\naddItem('Cavalry', 4,120,0,90,8,0.05,20,0,15,6.666666667,1.333333333,800,0,600,266.6666667);\r\naddItem('Cavalry', 5,320,0,240,160,0.06666666667,26.66666667,0,20,8.888888889,2,1200,0,900,400);\r\naddItem('Infantry', 1,20,20,0,0,0,0,0,0,0,0.25,150,150,0,0);\r\naddItem('Infantry', 2,40,40,0,0,0.01666666667,10,10,0,0,0.5,300,300,0,0);\r\naddItem('Infantry', 3,60,60,0,4,0.03333333333,13.33333333,13.33333333,0,4.444444444,1,600,600,0,200);\r\naddItem('Infantry', 4,120,120,0,8,0.05,20,20,0,6.666666667,1.333333333,800,800,0,266.6666667);\r\naddItem('Infantry', 5,320,320,0,160,0.06666666667,26.66666667,26.66666667,0,8.888888889,2,1200,1200,0,400);\r\n\r\nexport default data; ","import React from \"react\";\r\n\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\nimport './TroopEntryRow.scss';\r\n\r\nimport data, { TroopTierData } from '../Model/TroopTier.model';\r\nimport { TextField } from \"@material-ui/core\";\r\nconst theData = data.arr.map((item, i) => {\r\n  return {label: item.name, value: i+'', ...item};\r\n});\r\nconst options = data.arr.map((item, i) => {\r\n  return {label: item.name, value: ''+i};\r\n});\r\n\r\ninterface TroopTierDataExtended extends TroopTierData {\r\n  label: string,\r\n  value: string\r\n}\r\n\r\nexport interface TroopEntryCost {\r\n  index: number,\r\n  time: number,\r\n  food: number,\r\n  wood: number,\r\n  stone: number,\r\n  gold: number\r\n}\r\n\r\ntype TroopEntryRowProps = {\r\n  index: number;\r\n  compensateTime: boolean;\r\n  showDelete?: boolean;\r\n  handleDelete?: (index: number) => any;\r\n  handleUpdate?: (index: number, data: TroopEntryCost) => any;\r\n}\r\n\r\nexport type TroopEntryRowState = {\r\n  unitData: TroopTierDataExtended,\r\n  unitCount: number,\r\n  isDead: boolean,\r\n  cost: TroopEntryCost\r\n}\r\n\r\nexport const getNewEntryRowState = (index:number): TroopEntryRowState => {\r\n  return {\r\n    unitData: theData[0],\r\n    unitCount: 0,\r\n    isDead: false,\r\n    cost: {\r\n      index,\r\n      time: 0,\r\n      food: 0,\r\n      wood: 0,\r\n      stone: 0,\r\n      gold: 0\r\n    }\r\n  }\r\n}\r\n\r\nconst selectOptions = options.map(item => <MenuItem value={item.value} key={item.label}>{item.label}</MenuItem>);\r\n\r\nexport default class TroopEntryRow extends React.Component<TroopEntryRowProps,TroopEntryRowState> {\r\n  state: TroopEntryRowState = getNewEntryRowState(this.props.index);\r\n\r\n  handleUnitTypeChange = (event:any) => {\r\n    const newData = theData[Number(event.target.value)];\r\n    this.setState({unitData: newData});\r\n  };\r\n\r\n  handleUnitCountChange = (event: any) => {\r\n    const newCount = Number(event.target.value);\r\n    this.setState({unitCount: newCount});\r\n  }\r\n\r\n  handleUnitIsDead = (event: any) => {\r\n    const newIsDead = event.target.checked;\r\n    this.setState({isDead: newIsDead});\r\n  }\r\n\r\n  componentDidUpdate(prevProps: any) {\r\n    const baseValues = this.state.isDead\r\n      ? this.state.unitData.cost.fresh\r\n      : this.state.unitData.cost.heal;\r\n      console.log(this.state.isDead ? 'fresh!' : 'heal!')\r\n    const totalFood = this.state.unitCount * baseValues.food +\r\n      (this.props.compensateTime ? this.state.unitCount * baseValues.timeFood : 0);\r\n    const totalWood = this.state.unitCount * baseValues.food +\r\n      (this.props.compensateTime ? this.state.unitCount * baseValues.timeWood : 0);\r\n    const totalStone = this.state.unitCount * baseValues.food +\r\n      (this.props.compensateTime ? this.state.unitCount * baseValues.timeStone : 0);\r\n    const totalGold = this.state.unitCount * baseValues.food +\r\n      (this.props.compensateTime ? this.state.unitCount * baseValues.timeGold : 0);\r\n    let newCost = {\r\n        index: this.props.index,\r\n        time: baseValues.minutes * this.state.unitCount,\r\n        food: totalFood,\r\n        wood: totalWood,\r\n        stone: totalStone,\r\n        gold: totalGold\r\n      };\r\n    if (this.state.cost.food !== totalFood\r\n        || this.state.cost.wood !== totalWood\r\n        || this.state.cost.stone !== totalStone\r\n        || this.state.cost.gold !== totalGold) {\r\n          console.log('something changed (component side)');\r\n          this.setState({\r\n            cost: newCost\r\n          });\r\n\r\n          if (this.props.handleUpdate && typeof this.props.handleUpdate === 'function'){\r\n            this.props.handleUpdate(this.props.index, newCost);\r\n          }\r\n        } else {\r\n          console.log('nothing changed (component side)')\r\n        }\r\n  }\r\n  \r\n  handleDelete = () => {\r\n    if (this.props.handleDelete && typeof this.props.handleDelete === 'function') {\r\n      this.props.handleDelete(this.props.index);\r\n    }\r\n  }\r\n\r\n  showDelete() {\r\n    if (this.props.showDelete) {\r\n      return (<Button color=\"secondary\" size=\"small\" onClick={this.handleDelete} variant=\"contained\">X</Button>);\r\n    }\r\n    return \"\";\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <form noValidate autoComplete=\"off\" className=\"troop-entry-row\" id={\"troop-entry-\" + this.props.index} key={\"troop-entry-\"+this.props.index}>\r\n\r\n    <FormGroup row>\r\n\r\n      <FormControl className=\"troop-entry-field\">\r\n    <InputLabel id=\"troop-select-label\">Type/Tier</InputLabel>\r\n        <Select\r\n          labelId=\"troop-select-label\"\r\n          id=\"troop-select\"\r\n          value={this.state.unitData.value}\r\n          onChange={this.handleUnitTypeChange}\r\n        >\r\n          {selectOptions}\r\n          \r\n        </Select>\r\n      </FormControl>\r\n      <TextField className=\"troop-entry-field\" id=\"standard-basic\" label=\"# of Units\" value={this.state.unitCount} onChange={this.handleUnitCountChange}/>\r\n\r\n      <FormControlLabel\r\n        className=\"troop-entry-field\"\r\n        control={\r\n          <Switch\r\n            checked={this.state.isDead}\r\n            onChange={this.handleUnitIsDead}\r\n            name=\"checkedB\"\r\n            color=\"secondary\"\r\n          />\r\n        }\r\n        label=\"Dead?\"\r\n      />\r\n      <p>\r\n        {this.showDelete()}\r\n      </p>\r\n    </FormGroup>     \r\n      </form>\r\n\r\n\r\n      // <div className=\"input-row\">\r\n      //   <div className=\"dropdown-container\">\r\n      //     <Dropdown\r\n      //     options={options}\r\n      //     value={this.state.unitData.value}\r\n      //     onChange={this.handleUnitTypeChange} />\r\n        \r\n      //   </div>\r\n      //   <div className=\"input-container\">\r\n      //     <input\r\n      //       name=\"unitCount\"\r\n      //       placeholder=\"# of Units\"\r\n      //       type=\"number\"\r\n      //       value={this.state.unitCount}\r\n      //       onChange={this.handleUnitCountChange}\r\n      //     />\r\n      //   </div>\r\n      //   <div className=\"input-container\">\r\n      //     <label >\r\n      //       Dead? \r\n      //     <input\r\n      //       name=\"isDead\"\r\n      //       type=\"checkbox\"\r\n      //       checked={this.state.isDead}\r\n      //       onChange={this.handleUnitIsDead}\r\n      //     /></label>\r\n      //   </div>\r\n      // </div>\r\n    )};\r\n  };\r\n\r\n/**\r\nexport const TroopEntryRow = (props:any) => {\r\n  const [unitData, updateUnitType] = useState(theData[0]);\r\n  const [unitCount, updateUnitCountChange] = useState(0);\r\n  const [isDead, updateIsDead] = useState(false);\r\n  const [cost, updateCost] = useState({\r\n    time: 0,\r\n    food: 0,\r\n    wood: 0,\r\n    stone: 0,\r\n    gold: 0\r\n  });\r\n\r\n  const handleUnitTypeChange = (event:any) => {\r\n    const newData = theData[Number(event.value)];\r\n    updateUnitType(newData);\r\n    handleComponentUpdate(newData, unitCount, isDead);\r\n  };\r\n\r\n  const handleUnitCountChange = (event: any) => {\r\n    const newCount = Number(event.target.value);\r\n    updateUnitCountChange(newCount);\r\n    handleComponentUpdate(unitData, newCount, isDead);\r\n  }\r\n\r\n  const handleUnitIsDead = (event: any) => {\r\n    const newIsDead = event.target.checked;\r\n    updateIsDead(newIsDead);\r\n    handleComponentUpdate(unitData, unitCount, newIsDead);\r\n  }\r\n  \r\n  const handleComponentUpdate = (uData: any, uCount: number, dead: boolean) => {\r\n    console.log(props.compensateTime, uData, uCount, dead);\r\n\r\n  }\r\n  \r\n  return (\r\n    <div className=\"input-row\">\r\n      <div className=\"dropdown-container\">\r\n        <Dropdown\r\n        options={options}\r\n        value={unitData.value}\r\n        onChange={handleUnitTypeChange} />\r\n      \r\n      </div>\r\n      <div className=\"input-container\">\r\n        <input\r\n          name=\"unitCount\"\r\n          placeholder=\"# of Units\"\r\n          type=\"number\"\r\n          value={unitCount}\r\n          onChange={handleUnitCountChange}\r\n        />\r\n      </div>\r\n      <div className=\"input-container\">\r\n        <input\r\n          name=\"isDead\"\r\n          type=\"checkbox\"\r\n          checked={isDead}\r\n          onChange={handleUnitIsDead}\r\n        />\r\n      </div>\r\n      <button disabled={!false} type=\"submit\">\r\n        Submit\r\n      </button>\r\n    </div>\r\n    );\r\n  };\r\n */","import React from \"react\";\r\nimport TroopEntryRow, { TroopEntryCost, getNewEntryRowState } from './TroopEntryRow';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport Icon from '@material-ui/core/Icon';\r\n\r\n\r\ninterface TroopEntryListState {\r\n  entries: TroopEntryCost[],\r\n  isEditing: boolean\r\n}\r\n\r\ninterface TroopEntryListProps {\r\n  compensateTime: boolean;\r\n  handleDataUpdate?: (data: TroopEntryCost[]) => any;\r\n}\r\n\r\nconst dataDidChange = (oldEntries: TroopEntryCost[], newEntry: TroopEntryCost) => {\r\n  const oldEntry = oldEntries.filter(i => i.index === newEntry.index)[0];\r\n  return !(oldEntry.food === newEntry.food && oldEntry.wood === newEntry.wood\r\n        && oldEntry.stone === newEntry.stone && oldEntry.gold === newEntry.gold\r\n        && oldEntry.time === newEntry.time);\r\n}\r\n\r\nexport default class TroopEntryList extends React.Component<TroopEntryListProps, TroopEntryListState> {\r\n  state = {entries: [getNewEntryRowState(0).cost], isEditing: false}\r\n\r\n  getPosition(index: number) {\r\n    for(let i = 0; i < this.state.entries.length; i += 1){\r\n      if (this.state.entries[i].index === index) {\r\n        return i;\r\n      }\r\n    }\r\n    return -1;\r\n  }\r\n\r\n  updateParent = (newEntries: TroopEntryCost[]) => {\r\n    if (this.props.handleDataUpdate && typeof this.props.handleDataUpdate === 'function') {\r\n      this.props.handleDataUpdate(newEntries);\r\n    }\r\n  }\r\n\r\n  handleRowUpdate = (index: number, data: TroopEntryCost) => {\r\n    const i = this.getPosition(index);\r\n    if (dataDidChange(this.state.entries, data)){\r\n      console.log(data);\r\n      const newEntries = Object.assign([], this.state.entries, {[i]: data});\r\n      this.setState({entries: newEntries});\r\n      this.updateParent(newEntries);\r\n    } else {\r\n      console.log('nothing changed.');\r\n    }\r\n  }\r\n\r\n  handleEditingToggle = () => {\r\n    this.setState({isEditing: !this.state.isEditing});\r\n  }\r\n  handleAddClick = () => {\r\n    const lastIndex = this.state.entries[this.state.entries.length - 1].index;\r\n    this.setState({entries: [...this.state.entries, getNewEntryRowState(lastIndex + 1).cost]});\r\n  }\r\n\r\n  handleRowDelete = (index: number) => {\r\n    const newEntries = this.state.entries.filter(item => item.index !== index);\r\n    console.log(newEntries);\r\n    this.setState({entries: newEntries});\r\n    this.updateParent(newEntries);\r\n  }\r\n\r\n  getEditButton() {\r\n    if (this.state.isEditing) {\r\n      return (<Button variant=\"contained\" className=\"right\" onClick={this.handleEditingToggle}>Done Editing</Button>)\r\n    } else {\r\n      return (<Button variant=\"contained\" color=\"secondary\" className=\"right\" onClick={this.handleEditingToggle}>Edit</Button>)\r\n    }\r\n  }\r\n\r\n  getRows() {\r\n    return this.state.entries.map((item, i) =>\r\n      <TroopEntryRow index={item.index}\r\n                     key={item.index}\r\n                     compensateTime={this.props.compensateTime}\r\n                     showDelete={this.state.entries.length > 1 && this.state.isEditing}\r\n                     handleDelete={this.handleRowDelete.bind(this)}\r\n                     handleUpdate={this.handleRowUpdate.bind(this)}/>\r\n    );\r\n  }\r\n\r\n  render() { return (\r\n    <div>\r\n      <div className=\"entries\">\r\n        {this.getRows()}\r\n      </div>\r\n      <div className=\"buttons\">\r\n        <Button variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={this.handleAddClick}\r\n                className=\"left\">Add +</Button>\r\n        \r\n        {this.getEditButton()}\r\n      </div>\r\n    </div>\r\n  );}\r\n\r\n\r\n}","import React, { useState } from \"react\";\nimport Box from '@material-ui/core/Box';\nimport Container from '@material-ui/core/Container';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\n\nimport 'react-dropdown/style.css';\n\nimport './App.css';\n\nimport TroopEntryList from './Component/TroopEntryList';\nimport {TroopEntryCost} from './Component/TroopEntryRow';\n\nfunction formatTime(n: number): any {\n  const h = 60;\n  const d = 24 * h;\n  const days = Math.floor(n / d);\n  const hours = Math.floor((n % d) / h);\n  const min = n - (days * d) - (hours * h);\n\n  return (days > 0 ? days + 'd ' : '')+(hours > 0 || days > 0? hours + 'h ' : '')+min+'m';\n}\n\nfunction formatNumber(n: number): any {\n  const B = 1000000000;\n  const M = 1000000;\n  const K = 1000;\n  const O = 1;\n  let base = O;\n  let baseName = '';\n  if (n >= B) {\n    base = B;\n    baseName = 'B';\n  } else if (n >= M) {\n    base = M;\n    baseName = 'M';\n  } else if (n >= K) {\n    base = K;\n    baseName = 'K';\n  }\n  const truncated = base === O \n    ? n\n    : Math.ceil(n / (base/100))/100\n\n  return (<span>{truncated}{baseName}</span>);\n}\n\nfunction ceilIt(tc: TroopEntryCost): TroopEntryCost {\n  return {\n    index: tc.index,\n    time: Math.ceil(tc.time),\n    food: Math.ceil(tc.food),\n    wood: Math.ceil(tc.wood),\n    stone: Math.ceil(tc.stone),\n    gold: Math.ceil(tc.gold),\n  }\n}\n\nfunction App() {\n  const [compTime, updateCompTime] = useState(true);\n  const [totalCost, updateTotalCost] = useState({time: 0, food: 0, wood: 0, stone: 0, gold: 0});\n\n  const handleCompTimeUpdate = (event: any) => {\n    updateCompTime(event.target.checked);\n  }\n\n  const handleUpdateCosts = (data: TroopEntryCost[]) => {\n    updateTotalCost(ceilIt(data.reduce((a, b) => {\n      return {\n        index: 0,\n        time: a.time + b.time,\n        food: a.food + b.food,\n        wood: a.wood + b.wood,\n        stone: a.stone + b.stone,\n        gold: a.gold + b.gold,\n      }\n    })))\n  }\n\n  return (\n    <Container maxWidth=\"sm\">\n      <div className=\"App\">\n        <header>\n          <h2>Troop Compensation Calculator</h2>\n          <FormControlLabel\n            className=\"troop-entry-field\"\n            labelPlacement=\"start\"\n            control={\n              <Switch\n                checked={compTime}\n                onChange={handleCompTimeUpdate}\n                name=\"checkedB\"\n                color=\"primary\"\n              />\n            }\n            label=\"Compensate Time\"\n          />\n          </header>\n          <Box>\n            <table>\n              <thead>\n                <tr>\n                  <td>Recovery Time</td>\n                  <td>Food</td>\n                  <td>Wood</td>\n                  <td>Stone</td>\n                  <td>Gold</td>\n                </tr>\n              </thead>\n              <tbody>\n                <tr>\n                  <td>{formatTime(totalCost.time)}</td>\n                  <td>{formatNumber(totalCost.food)}</td>\n                  <td>{formatNumber(totalCost.wood)}</td>\n                  <td>{formatNumber(totalCost.stone)}</td>\n                  <td>{formatNumber(totalCost.gold)}</td>\n                </tr>\n              </tbody>\n            </table>\n          </Box>\n          <Box>\n            <TroopEntryList handleDataUpdate={handleUpdateCosts} compensateTime={compTime} />\n          </Box>\n      </div>\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}